const webpack = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const {
  VanillaExtractPlugin
} = require('@vanilla-extract/webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const NodePolyfillPlugin = require("node-polyfill-webpack-plugin")


let mode = process.env.NODE_ENV || "development"
let PUBLIC_PATH = process.env.HOST_PUBLIC_PATH_PREFIX || ""

console.log('PUBLIC_PATH:', PUBLIC_PATH)
console.log('mode:', mode)

module.exports = {
  mode: mode,
  output: {
    publicPath: PUBLIC_PATH,
  },
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: 'babel-loader'
      },
      {
        test: /\.tsx?$/,
        use: 'babel-loader',
        exclude: /node_modules/,
      },
      {
        test: /\.vanilla\.css$/i, // Targets only CSS files generated by vanilla-extract
        use: [
          MiniCssExtractPlugin.loader,
          {
            loader: require.resolve('css-loader'),
            options: {
              url: false // Required as image imports should be handled via JS/TS import statements
            }
          }
        ]
      },
      // {
      //   test: /\.css$/i,
      //   use: [
      //     "style-loader",
      //     "css-loader"
      //   ]
      // },
    ]
  },
  devtool: "source-map",
  devServer: {
    contentBase: "dist",
    hot: true
  },
  resolve: {
    extensions: ['.tsx', '.ts', '.js', '.jsx', '.css'],
    fallback: {
      "fs": false,
      // "tls": false,
      // "net": false,
      // "path": false,
      // "zlib": false,
      // "http": false,
      // "https": false,
      // "stream": false,
      // "crypto": false,
      // "crypto-browserify": require.resolve('crypto-browserify'), //if you want to use this module also don't forget npm i crypto-browserify
    }
  },
  plugins: [
    new HtmlWebpackPlugin({
      template: 'public/index.html'
    }),
    new VanillaExtractPlugin(),
    new MiniCssExtractPlugin(),
    new NodePolyfillPlugin(),
    new webpack.EnvironmentPlugin({
      PUBLIC_PATH
    })

]
}
